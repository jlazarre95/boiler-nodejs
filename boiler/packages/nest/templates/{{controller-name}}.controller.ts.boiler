import { Controller, Post, Body, Delete, HttpCode, HttpStatus, Param, Get, Query, Put } from '@nestjs/common';
import { Create{{pname}}DTO } from 'src/{{name}}/dtos/create-{{name}}.dto';
import { {{pname}}Service } from './{{name}}.service';
import { I{{pname}} } from 'src/{{name}}/interfaces/{{name}}.interface';
import { Update{{pname}}DTO } from 'src/{{name}}/dtos/update-{{name}}.dto';

@Controller('api/v5/{{pluralName}}')
export class {{pname}}Controller {

    constructor(private {{cname}}Service: {{pname}}Service) { }

    @Post()
    create{{pname}}(@Body() dto: Create{{pname}}DTO) {
        return this.{{cname}}Service.create{{pname}}(dto);
    }

    @Get()
    getAll{{pluralPascalCaseName}}(@Query() query: any): Promise<I{{pname}}[]> {
        return this.{{cname}}Service.getAll{{pluralPascalCaseName}}(query);
    }

    @Get(":id")
    get{{pname}}(@Param("id") id: string): Promise<I{{pname}}> {
        return this.{{cname}}Service.get{{pname}}(id);
    }

    @Put(":id")
    @HttpCode(HttpStatus.NO_CONTENT)
    update{{pname}}(@Param("id") id: string, @Body() dto: Update{{pname}}DTO): Promise<void> {
        return this.{{cname}}Service.update{{pname}}(id, dto);
    }

    @Delete(":id")
    @HttpCode(HttpStatus.NO_CONTENT)
    delete{{pname}}(@Param("id") id: string): Promise<void> {
        return this.{{cname}}Service.delete{{pname}}(id);
    }

}